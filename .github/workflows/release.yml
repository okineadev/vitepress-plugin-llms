name: 🚀 Release + Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.2.3)'
        required: false

jobs:
  check-previous-workflow:
    name: 🔍 Check if tests have already been passed
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      should-run-tests: ${{ steps.check-previous-workflow.outputs.should-run-tests }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            .github/workflows/scripts/

      - run: |
          echo '{"type": "module"}' > package.json

      - id: check-previous-workflow
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          CI_WORKFLOW_PATH: '.github/workflows/ci.yml'
        with:
          script: |
            const { default: checkIfTestsPassed } = await import('${{ github.workspace }}/.github/workflows/scripts/check-if-tests-passed.mjs')
            await checkIfTestsPassed({ context, github, core })

  test:
    needs: check-previous-workflow
    if: needs.check-previous-workflow.outputs.should-run-tests == 'true'
    permissions: {}
    uses: ./.github/workflows/tests.yml

  release:
    name: 🚀 Release
    needs: test
    if: ${{ !cancelled() && (needs.test.result == 'success' || needs.test.result == 'skipped') }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write
      attestations: write

    steps:
      - name: 🔐 Authentication for pushing to the main branch
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: 📥 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Required for fetching tags and generating release notes
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: true

      - name: 🔧 Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔧 Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global push.followTags true

      - name: 🚀 Prepare release
        run: bun run preversion

      - name: 🛠️ Build package
        run: bun run build

      - name: 📜 Generate changelog and release notes
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          bunx changelogen --release --push -r $VERSION
          bunx changelogen github release --token ${{ secrets.GITHUB_TOKEN }} -r $VERSION

      - name: 📦 Publish to NPM Registry
        run: |
          bunx npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
          bunx npm publish --provenance --access public
